*****************************************************************************
*				Sega Logo Code				    *
*				and character I/O routines		    *		
*****************************************************************************

	include	macros.i
	include equates.i

                                        

BssGroup	group	Bss

	section	.bss,BssGroup
_VdpShadow:     ds.b    24      ; Echo's of VDP registers
                                        
_ScreenCol	ds.w	1
_ScreenRow	ds.w	1

        section .text
                                        
                                        
_writeCharSet:
	AutoIncrement 2
	SetVdpRegister  01,%01110100   ; Turn on the display
	SetVdpRegister  16,%00000001   ; Map Size 64x32
	lea.l   charSet,A0    ; A0 = *LogoChars
	VramWrtAddr  $620,VCTRL  ; Set address at $600 - Char #48
	move.l  #16*96,d0      ; d0 char counter
ldchar: 
	move.w  (a0)+,VDATA     ; write logo chars
	dbra    d0,ldchar       
	lea.l   defPalette,a0  ; a0 = *defPallette
	CramWrtAddr  $0,VCTRL   ; Set CRAM ADDRESS
	moveq.l #32,d0          ; set color counter
ldpal:
	move.w  (a0)+,VDATA ; write logo pallette
	dbra    d0,ldpal
	rts                     ; Back again!

                        
delay:
	move.l  #$fff,d7        ; Call with delay value in D6
dt:	nop                     
	dbra    d7,dt           
	dbra    d6,delay
	rts

                                        


*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
*; FUNCTION:     putchx  - console I/O function!
*; DESCRIPTION:  Console I/O to the Genesis screen - Assumes that the Genesis
*;               is in a 40 col mode.
*;               MAP A will receive the text, the ASCII font shoud have been
*;               loaded. MAP A should be located at _ScrAAddr
*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
_putchx:
	move.w  _ScreenRow,D1
	lsl.w   #6,D1           ; D0=(ScreenRow*64+ScreenCol)*2
	add.w   _ScreenCol,D1   ;
	lsl.w   #1,D1
	add.w   _ScrAAddr,D1	; adjust for address...
	CalcVramWrtAddrCode D1,D2
	move.l  D2,VCTRL        ; Set vram write address
	cmp.b   #10,D0          ; Is linefeed?
	bne     PC_1
	addq.w  #1,_ScreenRow
	bra     PC_3
PC_1:   
	cmp.b   #13,D0          ; is a CR?
	bne     PC_2
	move.w  #0,_ScreenCol
	bra     PC_3
PC_2:   
	add.w   #17,d0          ; Adjust for our character set
	move.w  d0,VDATA        ; and set the map
	addq.w  #1,_ScreenCol
PC_3:   
	cmp.w   #39,_ScreenCol  ; At last col?
	bls     PC_4
	addq.w  #1,_ScreenRow
	move.w  #0,_ScreenCol   ; If so, go to the next row
PC_4:   
	cmp.w   #26,_ScreenRow  ; At last row?
	bls     PC_5            ; No, go around
*
* Scroll the screen up here
*
	AutoIncrement   1
	ShadowRegister  1,D0    ; Load whatever the prev register value was..
	or.b    #$10,D0         ; Enable DMA
	SetVdpRegisterCode 1,D0
	SetVdpRegister  19,$00
	SetVdpRegister  20,$0D  ; Setup DMA length
	SetVdpRegister  21,$80
	SetVdpRegister  22,$C0  ; DMA source address - $c080
	SetVdpRegister  23,$C0  ; DMA VRAM copy mode...
	MOVE.L  #$000000C3,VCTRL         ;Set DMA destination
** We should be DMA'ing now
PC_4A:  
	MOVE.W  VCTRL,D0
	BTST    #1,D0
	BNE     PC_4A           ; Wait for DMA
	SUBQ.W  #1,_ScreenRow

PC_5:
	rts


		obj	(*-_writeCharSet)+$300000
putsHigh:
		objEnd

*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
*; FUNCTION:     puts  - console I/O function!
*; DESCRIPTION:  print the string on the genesis screen - Assumes that the Genesis
*;               is in a 40 col mode.
*;               MAP A will receive the text, the ASCII font shoud have been
*;               loaded. MAP A should be located at _ScrAAddr
*; PARAMETERS:
*;		A0 = address of NULL terminated 'C' string
*;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
puts
	moveq.l	#0,d0
.loop
	move.b	(a0)+,d0
	beq	.fini
	movem.l	a0/d0,-(a7)
	bsr	_putchx
	movem.l	(a7)+,a0/d0
	bra.s	.loop
.fini
	rts
	

charSet:
*----------------------------------------------------------------------------
*Character Set from textfont.gen - In ASCII Order, starts at char #48, which
* is a space (Add 16 to ascii to get text on the screen
*----------------------------------------------------------------------------
* Char #0
	DC.L	$00000000,$00000000,$00000000,$00000000
	DC.L	$00000000,$00000000,$00000000,$00000000
* Char #1
	DC.L	$00110000,$00110000,$00110000,$00110000
	DC.L	$00110000,$00000000,$00110000,$00000000
* Char #2
	DC.L	$01101100,$01101100,$01101100,$00000000
	DC.L	$00000000,$00000000,$00000000,$00000000
* Char #3
	DC.L	$01101100,$01101100,$11111110,$01101100
	DC.L	$11111110,$01101100,$01101100,$00000000
* Char #4
	DC.L	$00110000,$01111100,$11000000,$01111000
	DC.L	$00001100,$11111000,$00110000,$00000000
* Char #5
	DC.L	$00000000,$11000110,$11001100,$00011000
	DC.L	$00110000,$01100110,$11000110,$00000000
* Char #6
	DC.L	$00111000,$01101100,$00111000,$01110110
	DC.L	$11011100,$11001100,$01110110,$00000000
* Char #7
	DC.L	$01100000,$01100000,$11000000,$00000000
	DC.L	$00000000,$00000000,$00000000,$00000000
* Char #8
	DC.L	$00011000,$00110000,$01100000,$01100000
	DC.L	$01100000,$00110000,$00011000,$00000000
* Char #9
	DC.L	$01100000,$00110000,$00011000,$00011000
	DC.L	$00011000,$00110000,$01100000,$00000000
* Char #10
	DC.L	$00000000,$01100110,$00111100,$11111111
	DC.L	$00111100,$01100110,$00000000,$00000000
* Char #11
	DC.L	$00000000,$00110000,$00110000,$11111100
	DC.L	$00110000,$00110000,$00000000,$00000000
* Char #12
	DC.L	$00000000,$00000000,$00000000,$00000000
	DC.L	$00000000,$00110000,$00110000,$01100000
* Char #13
	DC.L	$00000000,$00000000,$00000000,$11111100
	DC.L	$00000000,$00000000,$00000000,$00000000
* Char #14
	DC.L	$00000000,$00000000,$00000000,$00000000
	DC.L	$00000000,$00110000,$00110000,$00000000
* Char #15
	DC.L	$00000110,$00001100,$00011000,$00110000
	DC.L	$01100000,$11000000,$10000000,$00000000
* Char #16
	DC.L	$01111100,$11000110,$11001110,$11011110
	DC.L	$11110110,$11100110,$01111100,$00000000
* Char #17
	DC.L	$00110000,$01110000,$00110000,$00110000
	DC.L	$00110000,$00110000,$01111000,$00000000
* Char #18
	DC.L	$11111000,$00001100,$00001100,$00111000
	DC.L	$01100000,$11000000,$11111100,$00000000
* Char #19
	DC.L	$11111000,$00001100,$00001100,$00111000
	DC.L	$00001100,$00001100,$11111000,$00000000
* Char #20
	DC.L	$00011100,$00111100,$01101100,$11001100
	DC.L	$11111110,$00001100,$00001100,$00000000
* Char #21
	DC.L	$11111100,$11000000,$11111000,$00001100
	DC.L	$00001100,$00001100,$11111000,$00000000
* Char #22
	DC.L	$00111100,$01100000,$11000000,$11111000
	DC.L	$11001100,$11001100,$01111000,$00000000
* Char #23
	DC.L	$11111100,$00001100,$00011000,$00110000
	DC.L	$01100000,$11000000,$11000000,$00000000
* Char #24
	DC.L	$01111000,$11001100,$11001100,$01111000
	DC.L	$11001100,$11001100,$01111000,$00000000
* Char #25
	DC.L	$01111000,$11001100,$11001100,$01111100
	DC.L	$00001100,$00001100,$01111000,$00000000
* Char #26
	DC.L	$00000000,$00110000,$00110000,$00000000
	DC.L	$00000000,$00110000,$00110000,$00000000
* Char #27
	DC.L	$00000000,$00110000,$00110000,$00000000
	DC.L	$00000000,$00110000,$00110000,$01100000
* Char #28
	DC.L	$00011000,$00110000,$01100000,$11000000
	DC.L	$01100000,$00110000,$00011000,$00000000
* Char #29
	DC.L	$00000000,$00000000,$11111100,$00000000
	DC.L	$00000000,$11111100,$00000000,$00000000
* Char #30
	DC.L	$01100000,$00110000,$00011000,$00001100
	DC.L	$00011000,$00110000,$01100000,$00000000
* Char #31
	DC.L	$11111000,$00001100,$00001100,$00111000
	DC.L	$00110000,$00000000,$00110000,$00000000
* Char #32
	DC.L	$01111100,$11000110,$11011110,$11011110
	DC.L	$11011110,$11000000,$01111000,$00000000
* Char #33
	DC.L	$00110000,$01111000,$11001100,$11001100
	DC.L	$11111100,$11001100,$11001100,$00000000
* Char #34
	DC.L	$11111000,$11001100,$11001100,$11111000
	DC.L	$11001100,$11001100,$11111000,$00000000
* Char #35
	DC.L	$01111100,$11000000,$11000000,$11000000
	DC.L	$11000000,$11000000,$01111100,$00000000
* Char #36
	DC.L	$11111000,$11001100,$11001100,$11001100
	DC.L	$11001100,$11001100,$11111000,$00000000
* Char #37
	DC.L	$11111100,$11000000,$11000000,$11111000
	DC.L	$11000000,$11000000,$11111100,$00000000
* Char #38
	DC.L	$11111100,$11000000,$11000000,$11111000
	DC.L	$11000000,$11000000,$11000000,$00000000
* Char #39
	DC.L	$01111100,$11000000,$11000000,$11000000
	DC.L	$11011100,$11001100,$01111100,$00000000
* Char #40
	DC.L	$11001100,$11001100,$11001100,$11111100
	DC.L	$11001100,$11001100,$11001100,$00000000
* Char #41
	DC.L	$01111000,$00110000,$00110000,$00110000
	DC.L	$00110000,$00110000,$01111000,$00000000
* Char #42
	DC.L	$00011110,$00001100,$00001100,$00001100
	DC.L	$00001100,$00001100,$11111000,$00000000
* Char #43
	DC.L	$11000110,$11001100,$11011000,$11110000
	DC.L	$11011000,$11001100,$11000110,$00000000
* Char #44
	DC.L	$11000000,$11000000,$11000000,$11000000
	DC.L	$11000000,$11000000,$11111100,$00000000
* Char #45
	DC.L	$11000110,$11101110,$11111110,$11010110
	DC.L	$11000110,$11000110,$11000110,$00000000
* Char #46
	DC.L	$11000110,$11100110,$11110110,$11011110
	DC.L	$11001110,$11000110,$11000110,$00000000
* Char #47
	DC.L	$01111000,$11001100,$11001100,$11001100
	DC.L	$11001100,$11001100,$01111000,$00000000
* Char #48
	DC.L	$11111000,$11001100,$11001100,$11111000
	DC.L	$11000000,$11000000,$11000000,$00000000
* Char #49
	DC.L	$01111000,$11001100,$11001100,$11001100
	DC.L	$11001100,$11011000,$01101100,$00000000
* Char #50
	DC.L	$11111000,$11001100,$11001100,$11111000
	DC.L	$11110000,$11011000,$11001100,$00000000
* Char #51
	DC.L	$01111100,$11000000,$11000000,$01111000
	DC.L	$00001100,$00001100,$11111000,$00000000
* Char #52
	DC.L	$11111100,$00110000,$00110000,$00110000
	DC.L	$00110000,$00110000,$00110000,$00000000
* Char #53
	DC.L	$11001100,$11001100,$11001100,$11001100
	DC.L	$11001100,$11001100,$01111100,$00000000
* Char #54
	DC.L	$11001100,$11001100,$11001100,$11001100
	DC.L	$11001100,$01111000,$00110000,$00000000
* Char #55
	DC.L	$11000110,$11000110,$11000110,$11010110
	DC.L	$11111110,$11101110,$11000110,$00000000
* Char #56
	DC.L	$11000110,$11000110,$01101100,$00111000
	DC.L	$01101100,$11000110,$11000110,$00000000
* Char #57
	DC.L	$11001100,$11001100,$11001100,$01111000
	DC.L	$00110000,$00110000,$00110000,$00000000
* Char #58
	DC.L	$11111110,$00001100,$00011000,$00110000
	DC.L	$01100000,$11000000,$11111110,$00000000
* Char #59
	DC.L	$01111000,$01100000,$01100000,$01100000
	DC.L	$01100000,$01100000,$01111000,$00000000
* Char #60
	DC.L	$11000000,$01100000,$00110000,$00011000
	DC.L	$00001100,$00000110,$00000010,$00000000
* Char #61
	DC.L	$01111000,$00011000,$00011000,$00011000
	DC.L	$00011000,$00011000,$01111000,$00000000
* Char #62
	DC.L	$00010000,$00111000,$01101100,$11000110
	DC.L	$00000000,$00000000,$00000000,$00000000
* Char #63
	DC.L	$00000000,$00000000,$00000000,$00000000
	DC.L	$00000000,$00000000,$00000000,$11111111
* Char #64
	DC.L	$00110000,$00110000,$00011000,$00000000
	DC.L	$00000000,$00000000,$00000000,$00000000
* Char #65
	DC.L	$00000000,$00000000,$11111000,$00001100
	DC.L	$01111100,$11001100,$01111100,$00000000
* Char #66
	DC.L	$11000000,$11000000,$11111000,$11001100
	DC.L	$11001100,$11001100,$11111000,$00000000
* Char #67
	DC.L	$00000000,$00000000,$01111100,$11000000
	DC.L	$11000000,$11000000,$01111100,$00000000
* Char #68
	DC.L	$00001100,$00001100,$01111100,$11001100
	DC.L	$11001100,$11001100,$01111100,$00000000
* Char #69
	DC.L	$00000000,$00000000,$01111000,$11001100
	DC.L	$11111100,$11000000,$01111100,$00000000
* Char #70
	DC.L	$00111100,$01100000,$01100000,$11111000
	DC.L	$01100000,$01100000,$01100000,$00000000
* Char #71
	DC.L	$00000000,$00000000,$01111100,$11001100
	DC.L	$11001100,$01111100,$00001100,$11111000
* Char #72
	DC.L	$11000000,$11000000,$11111000,$11001100
	DC.L	$11001100,$11001100,$11001100,$00000000
* Char #73
	DC.L	$00110000,$00000000,$00110000,$00110000
	DC.L	$00110000,$00110000,$00110000,$00000000
* Char #74
	DC.L	$00011000,$00000000,$00011000,$00011000
	DC.L	$00011000,$00011000,$00011000,$11110000
* Char #75
	DC.L	$11000000,$11000000,$11001100,$11011000
	DC.L	$11110000,$11011000,$11001100,$00000000
* Char #76
	DC.L	$01110000,$00110000,$00110000,$00110000
	DC.L	$00110000,$00110000,$00110000,$00000000
* Char #77
	DC.L	$00000000,$00000000,$11000110,$11111110
	DC.L	$11010110,$11000110,$11000110,$00000000
* Char #78
	DC.L	$00000000,$00000000,$11111000,$11001100
	DC.L	$11001100,$11001100,$11001100,$00000000
* Char #79
	DC.L	$00000000,$00000000,$01111000,$11001100
	DC.L	$11001100,$11001100,$01111000,$00000000
* Char #80
	DC.L	$00000000,$00000000,$11111000,$11001100
	DC.L	$11001100,$11001100,$11111000,$11000000
* Char #81
	DC.L	$00000000,$00000000,$01111100,$11001100
	DC.L	$11001100,$11001100,$01111100,$00001100
* Char #82
	DC.L	$00000000,$00000000,$11011100,$11100000
	DC.L	$11000000,$11000000,$11000000,$00000000
* Char #83
	DC.L	$00000000,$00000000,$01111100,$11000000
	DC.L	$01111000,$00001100,$11111000,$00000000
* Char #84
	DC.L	$01100000,$01100000,$11111100,$01100000
	DC.L	$01100000,$01100000,$00111100,$00000000
* Char #85
	DC.L	$00000000,$00000000,$11001100,$11001100
	DC.L	$11001100,$11001100,$01111100,$00000000
* Char #86
	DC.L	$00000000,$00000000,$11001100,$11001100
	DC.L	$11001100,$01111000,$00110000,$00000000
* Char #87
	DC.L	$00000000,$00000000,$11000110,$11000110
	DC.L	$11010110,$11111110,$11000110,$00000000
* Char #88
	DC.L	$00000000,$00000000,$11000110,$01101100
	DC.L	$00111000,$01101100,$11000110,$00000000
* Char #89
	DC.L	$00000000,$00000000,$11001100,$11001100
	DC.L	$11001100,$01111100,$00001100,$11111000
* Char #90
	DC.L	$00000000,$00000000,$11111100,$00011000
	DC.L	$00110000,$01100000,$11111100,$00000000
* Char #91
	DC.L	$00011100,$00110000,$00110000,$11100000
	DC.L	$00110000,$00110000,$00011100,$00000000
* Char #92
	DC.L	$00011000,$00011000,$00011000,$00000000
	DC.L	$00011000,$00011000,$00011000,$00000000
* Char #93
	DC.L	$11100000,$00110000,$00110000,$00011100
	DC.L	$00110000,$00110000,$11100000,$00000000
* Char #94
	DC.L	$01110110,$11011100,$00000000,$00000000
	DC.L	$00000000,$00000000,$00000000,$00000000
* Char #95
	DC.L	$00000000,$00010000,$00111000,$01101100
	DC.L	$11000110,$11000110,$11111110,$00000000

*****************************************************************************
*Palette info.
*****************************************************************************
* Initial palette
defPalette:
                dc.w    $000,$EEE,$EEE,$EEE,$EEE,$EEE,$EEE,$EA0
		dc.w	$E80,$E60,$E40,$E20,$E00,$C00,$A00,$800


		include	globals.i
		end
